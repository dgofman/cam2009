<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml" activate="onRefresh()">
	<mx:Script>
		<![CDATA[
			import com.academy.calder.enum.Relation;
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			import com.academy.calder.enum.Relation;
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			import com.academy.calder.enum.Relation;
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.ListEvent;
			import mx.managers.DragManager;
			import mx.collections.ArrayCollection;
			import com.academy.calder.vo.AccountVO;
			import com.academy.calder.vo.AddressVO;
			import com.academy.calder.vo.ContactVO;
			import com.academy.calder.business.Manager;
			import com.academy.calder.business.AMFService;
			import flash.net.navigateToURL;
		
			[Bindable]
			private var _newrecord:Boolean = false;
			[Bindable]
			private var _editrecord:Boolean = false;
			
			[Bindable]
			private var _account:AccountVO;
			[Bindable]
			private var _address:AddressVO;
			[Bindable]
			private var _contact:ContactVO;
			
			//http://www.freeiconsweb.com/gif_icons.htm
			[Bindable]
            [Embed(source="/resources/images/email.gif")] private var email:Class;
            [Bindable]
            [Embed(source="/resources/images/cell.gif")]  private var cell:Class;
            [Bindable]
            [Embed(source="/resources/images/phone.gif")] private var phone:Class;
			[Bindable]
            [Embed(source="/resources/images/pager.gif")] private var pager:Class;
            [Bindable]
            [Embed(source="/resources/images/fax.gif")]   private var fax:Class;
            
			public function onRefresh():void{
				clean();
				AMFService.send('CAM.persons', null, onPersonsResult, onFault);
			}
			
			public function contactType(item:Object):Class{
                return this[item];
            }
            
			private function onSearch():void{
				AMFService.send('CAM.searchPersons', [keyword.text], onPersonsResult, onFault);
			}
			
			private function onPersonsResult(result:Object):void{
				personGrid.dataProvider = result;
				lessonsTabs.selectedIndex = 0;
			}
			
			private function onItemClick(event:ListEvent):void{
				var personId:String = personGrid.selectedItem.personId;
				AMFService.send('Account.links', [personId], onAccountLinkResult, onFault);
			}
			
			private function onLinksItemClick(event:ListEvent):void{
				if(event.rowIndex != linkGrid.selectedIndex){
					var personId:String = linkGrid.selectedItem.personId;
					AMFService.send('Account.contact', [personId], onContactResult, onFault);
					AMFService.send('Account.address', [personId], onAddressResult, onFault);
				}
			}
			
			private function onAccountLinkResult(result:Object):void{
				linkGrid.dataProvider = result;
				_account = null;
				_address = null;
				_contact = null;
				contactGrid.dataProvider = null;
				addressGrid.dataProvider = null;
				if(result is Array && result.length > 0 && result[0].accountId != null)
					AMFService.send('Account.selectedAccount', [result[0].accountId], onAccountResult, onFault);					
			}
			
			private function onAccountResult(result:Object):void{
				_account = new AccountVO(result);
				_address = new AddressVO(result);
				_contact = new ContactVO(result);
				if(result != null){
					_address.addressId = _account.selectedBillingAddressId;
					_contact.contactId = _account.selectedBillingEmailContactId;
				}
			}
			
			private function onContactResult(result:Object):void{
				contactGrid.dataProvider = result;
			}
			
			private function onAddressResult(result:Object):void{
				addressGrid.dataProvider = result;
			}
			
			private function clean():void{
				_account = null;
				_address = null;
				_contact = null;
				if(personGrid)personGrid.selectedIndex = -1;
				if(linkGrid)linkGrid.dataProvider = null;
				if(contactGrid)contactGrid.dataProvider = null;
				if(addressGrid)addressGrid.dataProvider = null;
			}
			
			private function onPersonDragEnter(event:DragEvent):void{
				DragManager.showFeedback(DragManager.MOVE);
				DragManager.acceptDragDrop(UIComponent(event.currentTarget));
			}

			private function onLinkDragEnter(event:DragEvent):void  {
		        var items:Array = event.dragSource.dataForFormat("items") as Array;
		        var isAllowed:Boolean = true;
		        if(items is Array && items.length == 1 && event.currentTarget.dataProvider){
		        	var personId:String = items[0].personId;
		        	var dp:ArrayCollection = event.currentTarget.dataProvider;
		        	for(var i:uint = 0; i < dp.length; i++){
		        		if(dp.getItemAt(i).personId == personId){
		        			isAllowed = false;
		        			break;
		        		}
		        	}
		        }

		        if (isAllowed){
		            DragManager.acceptDragDrop(UIComponent(event.currentTarget));
		 		}else{
		            DragManager.showFeedback(DragManager.NONE);
		            event.preventDefault();	
		        }
		     }
		     
		     private function onLinkDragComplete(event:DragEvent):void {
				contactGrid.dataProvider = null;
				addressGrid.dataProvider = null;
			}

			private function openMail(mail:String):void{
                navigateToURL(new URLRequest('mailto:' + mail), "_top"); 
			}
			
			private function onFault(fault:Object):void{
				Manager.error(fault.code + ": " + fault.description, Manager.bundle.getMessage('error_persons'));
			}
		]]>
	</mx:Script>

	<mx:VBox width="300" height="100%" enabled="{_newrecord == false &amp;&amp; _editrecord == false}">
		<mx:HBox width="100%" label="Search" backgroundColor="#cccccc"
				paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10">
			<mx:TextInput id="keyword" width="100%" enter="onSearch()"/>
			<mx:Button label="{Manager.bundle.getMessage('search')}" click="onSearch()"/>
		</mx:HBox>
		<mx:DataGrid id="personGrid" width="100%" height="100%" 
			dragEnter="onPersonDragEnter(event)"
			dragEnabled="true" itemClick="onItemClick(event)">
			<mx:columns>
				<mx:Array>
					<mx:DataGridColumn dataField="last" headerText="Last"/>
					<mx:DataGridColumn dataField="first" headerText="First"/>
				</mx:Array>
			 </mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	<mx:VDividedBox width="100%" height="100%">
		<mx:HBox width="100%" height="50%">
			<mx:DataGrid id="linkGrid" width="350" height="100%" editable="true"
				dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"
				dragComplete="onLinkDragComplete(event)" dragEnter="onLinkDragEnter(event)" 
				itemClick="onLinksItemClick(event)">
				<mx:columns>
					<mx:Array>
						<mx:DataGridColumn dataField="last" headerText="Last" editable="false"/>
						<mx:DataGridColumn dataField="first" headerText="First" editable="false"/>
						<mx:DataGridColumn dataField="relation" headerText="Relation" width="80">
							<mx:itemEditor>
			                    <mx:Component>
			                        <mx:ComboBox dataProvider="{Relation.list}">
			                        	<mx:Script>
											import com.academy.calder.enum.Relation;
			                    		</mx:Script>
			                        </mx:ComboBox>
			                    </mx:Component>
			                </mx:itemEditor>
						</mx:DataGridColumn>
					</mx:Array>
				 </mx:columns>
			</mx:DataGrid>
			<mx:VBox width="100%" height="100%" verticalGap="0">
				<mx:HBox width="100%" paddingTop="2">
					<mx:Image source="{Manager.getIcon('helpIcon')}"/>
					<mx:Spacer width="100%"/>
					<mx:Label text="{Manager.bundle.getMessage('Balance')}:" fontWeight="bold"/>
					<mx:Label text="{_account.currentBalance}"/>
				</mx:HBox>
				<mx:HBox width="100%" horizontalAlign="right">		
					<mx:Label text="{Manager.bundle.getMessage('Last Payment')}:" fontWeight="bold"/>
					<mx:Label text="{_account.lastPaymentDate}"/>
				</mx:HBox>
				<mx:Form width="100%" backgroundColor="#f0f0f0" paddingTop="2" paddingBottom="0">
					<mx:FormItem label="{Manager.bundle.getMessage('Email:')}" width="100%" direction="horizontal">
						<mx:Label click="openMail(_contact.entry)" width="100%" 
								htmlText="&lt;a href='#'&gt;{_contact.entry}&lt;a/&gt;"
								color="blue" textDecoration="underline"/>
						<mx:Image source="{Manager.getIcon('helpIcon')}"/>
					</mx:FormItem>
					<mx:FormItem label="{Manager.bundle.getMessage('Address:')}" width="100%">
						<mx:VBox verticalGap="0" width="100%">
							<mx:HBox width="100%">						
								<mx:Label text="{_address.address1}" width="100%"/>
								<mx:Image source="{Manager.getIcon('helpIcon')}"/>
							</mx:HBox>
							<mx:Label text="{_address.city}"/>
							<mx:Label text="{_address.stateProvince}, {_address.postalCode}"/>
						</mx:VBox>
					</mx:FormItem>
				</mx:Form>
				<mx:HBox width="100%" height="100%">
					<mx:DataGrid id="contactGrid" width="40%" height="100%" showHeaders="false">
						<mx:columns>
							<mx:Array>
								<mx:DataGridColumn width="20">
									<mx:itemRenderer>
					                    <mx:Component>
					                        <mx:Image source="{contactType(data)}" width="100%" horizontalAlign="center">
					                        	<mx:Script>
						                    		<![CDATA[
						                    			private function contactType(item:Object):Class{
						                    				return document.contactType(data.type)
						                    			}
						                    		]]>
						                    	</mx:Script>
					                        </mx:Image>
					                    </mx:Component>
					                </mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn dataField="entry" showDataTips="true" itemRenderer="mx.controls.Label"/>
							</mx:Array>
						 </mx:columns>
					</mx:DataGrid>
					<mx:List id="addressGrid" width="60%" height="100%" labelField="address" itemRenderer="mx.controls.Label"/>
				</mx:HBox>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox width="100%" height="50%">
			<mx:TabNavigator id="lessonsTabs" width="80%" height="100%">
				<mx:VBox label="Piano" width="100%" height="100%">
					
				</mx:VBox>
			</mx:TabNavigator>
			<mx:VBox width="20%" height="100%">
				<mx:Label text="{Manager.bundle.getMessage('Payments')}"/>
				<mx:List width="100%" height="100%"/>
			</mx:VBox>
		</mx:HBox>
	</mx:VDividedBox>
</mx:HDividedBox>